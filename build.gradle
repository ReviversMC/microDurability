plugins {
	id 'fabric-loom'
}

version = project.mod_version + '+1.20.6'
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	if (project.use_third_party_mods == 'true') {
		maven {
			name = 'Modrinth'
			url = 'https://api.modrinth.com/maven'
			content {
				includeGroup 'maven.modrinth'
			}
		}
		maven {
			url = 'https://cursemaven.com'
			content {
				includeGroup 'curse.maven'
			}
		}
	}
	maven {
		name = 'TerraformersMC'
		url = 'https://maven.terraformersmc.com/releases'
	}
    maven {
		name = 'Shedaniel'
        url = 'https://maven.shedaniel.me/'
    }
	mavenCentral()
}


dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"

    // Required Fabric API modules
    modImplementation(fabricApi.module('fabric-api-base', project.fabric_api_version))
    modImplementation(fabricApi.module('fabric-rendering-v1', project.fabric_api_version))
	modRuntimeOnly "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

    // ModMenu integration
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    // Cloth Config for config screen
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: 'net.fabricmc.fabric-api')
    }


	if (project.use_third_party_mods == 'true') {
		configurations {
			modRuntimeOnly {
				transitive = true
				exclude module: 'fabric-loader'
			}
		}

		// Use full Fabric API bundle while debugging, since transitive deps aren't always declared correctly
		modRuntimeOnly "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

		modRuntimeOnly "maven.modrinth:sodium:${project.sodium_version}"
		modRuntimeOnly "maven.modrinth:lithium:${project.lithium_version}"
		modRuntimeOnly "maven.modrinth:ferrite-core:${project.ferritecore_version}"
		modRuntimeOnly "maven.modrinth:threadtweak:${project.threadtweak_version}"
	}
}


processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}

	from('assets/icon.png') {
		into 'assets/microdurability/'
	}
}

tasks.withType(JavaCompile).configureEach {
	// Ensure that the encoding is set to UTF-8, no matter what the system default is.
	// This fixes some edge cases with special characters not displaying correctly,
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html.
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = 'UTF-8'

	// Minecraft 1.18-pre2 upwards uses Java 17.
	it.options.release = 21
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present. If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid
	// with development. Uncomment this line to generate them.
	// withJavadocJar()
}
